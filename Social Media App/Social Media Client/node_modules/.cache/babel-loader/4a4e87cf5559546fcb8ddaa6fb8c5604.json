{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\hp\\\\Desktop\\\\SocialMedia\\\\Social-Media-App\\\\socialmedia-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hp\\\\Desktop\\\\SocialMedia\\\\Social-Media-App\\\\socialmedia-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hp\\\\Desktop\\\\SocialMedia\\\\Social-Media-App\\\\socialmedia-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hp\\\\Desktop\\\\SocialMedia\\\\Social-Media-App\\\\socialmedia-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hp\\\\Desktop\\\\SocialMedia\\\\Social-Media-App\\\\socialmedia-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectSpread from \"C:\\\\Users\\\\hp\\\\Desktop\\\\SocialMedia\\\\Social-Media-App\\\\socialmedia-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\SocialMedia\\\\social-media-app\\\\socialmedia-client\\\\src\\\\components\\\\scream\\\\ScreamDialog.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton';\nimport LikeButton from './LikeButton';\nimport Comments from './Comments';\nimport CommentForm from './CommentForm';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom'; // MUI Stuff\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'; // Icons\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\nimport ChatIcon from '@material-ui/icons/Chat'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { getScream, clearErrors } from '../../redux/actions/dataActions';\n\nvar styles = function styles(theme) {\n  return _objectSpread({}, theme, {\n    profileImage: {\n      maxWidth: 200,\n      height: 200,\n      borderRadius: '50%',\n      objectFit: 'cover'\n    },\n    dialogContent: {\n      padding: 20\n    },\n    closeButton: {\n      position: 'absolute',\n      left: '90%'\n    },\n    expandButton: {\n      position: 'absolute',\n      left: '90%'\n    },\n    spinnerDiv: {\n      textAlign: 'center',\n      marginTop: 50,\n      marginBottom: 50\n    }\n  });\n};\n\nvar ScreamDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScreamDialog, _Component);\n\n  function ScreamDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ScreamDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScreamDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      oldPath: '',\n      newPath: ''\n    };\n\n    _this.handleOpen = function () {\n      var oldPath = window.location.pathname;\n      var _this$props = _this.props,\n          userHandle = _this$props.userHandle,\n          screamId = _this$props.screamId;\n      var newPath = \"/users/\".concat(userHandle, \"/scream/\").concat(screamId);\n      if (oldPath === newPath) oldPath = \"/users/\".concat(userHandle);\n      window.history.pushState(null, null, newPath);\n\n      _this.setState({\n        open: true,\n        oldPath: oldPath,\n        newPath: newPath\n      });\n\n      _this.props.getScream(_this.props.screamId);\n    };\n\n    _this.handleClose = function () {\n      window.history.pushState(null, null, _this.state.oldPath);\n\n      _this.setState({\n        open: false\n      });\n\n      _this.props.clearErrors();\n\n      window.location.reload();\n    };\n\n    return _this;\n  }\n\n  _createClass(ScreamDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.openDialog) {\n        this.handleOpen();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          _this$props2$scream = _this$props2.scream,\n          screamId = _this$props2$scream.screamId,\n          body = _this$props2$scream.body,\n          createdAt = _this$props2$scream.createdAt,\n          likeCount = _this$props2$scream.likeCount,\n          commentCount = _this$props2$scream.commentCount,\n          userImage = _this$props2$scream.userImage,\n          userHandle = _this$props2$scream.userHandle,\n          comments = _this$props2$scream.comments,\n          loading = _this$props2.UI.loading;\n      var dialogMarkup = loading ? React.createElement(\"div\", {\n        className: classes.spinnerDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        size: 200,\n        thickness: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })) : React.createElement(Grid, {\n        container: true,\n        spacing: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: userImage,\n        alt: \"Profile\",\n        className: classes.profileImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        sm: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: Link,\n        color: \"primary\",\n        variant: \"h5\",\n        to: \"/users/\".concat(userHandle),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"@\", userHandle), React.createElement(\"hr\", {\n        className: classes.invisibleSeparator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, dayjs(createdAt).format('h:mm a, MMMM DD YYYY')), React.createElement(\"hr\", {\n        className: classes.invisibleSeparator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"body1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, body), React.createElement(LikeButton, {\n        screamId: screamId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, likeCount, \" Likes\"), React.createElement(MyButton, {\n        tip: \"Comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(ChatIcon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, commentCount, \" Comments\")), React.createElement(\"hr\", {\n        className: classes.visibleSeparator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(CommentForm, {\n        screamId: screamId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(Comments, {\n        comments: comments,\n        oldPath: this.state.oldPath,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }));\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(MyButton, {\n        onClick: this.handleOpen,\n        tip: \"Expand Post\",\n        tipClassName: classes.expandButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(UnfoldMore, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        fullWidth: true,\n        maxWidth: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(MyButton, {\n        tip: \"Close\",\n        onClick: this.handleClose,\n        tipClassName: classes.closeButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(DialogContent, {\n        className: classes.dialogContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, dialogMarkup)));\n    }\n  }]);\n\n  return ScreamDialog;\n}(Component);\n\nScreamDialog.propTypes = {\n  clearErrors: PropTypes.func.isRequired,\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    scream: state.data.scream,\n    UI: state.UI\n  };\n};\n\nvar mapActionsToProps = {\n  getScream: getScream,\n  clearErrors: clearErrors\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));","map":{"version":3,"sources":["C:\\Users\\hp\\Desktop\\SocialMedia\\social-media-app\\socialmedia-client\\src\\components\\scream\\ScreamDialog.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","LikeButton","Comments","CommentForm","dayjs","Link","Dialog","DialogContent","CircularProgress","Grid","Typography","CloseIcon","UnfoldMore","ChatIcon","connect","getScream","clearErrors","styles","theme","profileImage","maxWidth","height","borderRadius","objectFit","dialogContent","padding","closeButton","position","left","expandButton","spinnerDiv","textAlign","marginTop","marginBottom","ScreamDialog","state","open","oldPath","newPath","handleOpen","window","location","pathname","props","userHandle","screamId","history","pushState","setState","handleClose","reload","openDialog","classes","scream","body","createdAt","likeCount","commentCount","userImage","comments","loading","UI","dialogMarkup","invisibleSeparator","format","visibleSeparator","propTypes","func","isRequired","string","object","mapStateToProps","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\nimport LikeButton from './LikeButton';\r\nimport Comments from './Comments';\r\nimport CommentForm from './CommentForm';\r\nimport dayjs from 'dayjs';\r\nimport { Link } from 'react-router-dom';\r\n// MUI Stuff\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n// Icons\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { getScream, clearErrors } from '../../redux/actions/dataActions';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme,\r\n  profileImage: {\r\n    maxWidth: 200,\r\n    height: 200,\r\n    borderRadius: '50%',\r\n    objectFit: 'cover'\r\n  },\r\n  dialogContent: {\r\n    padding: 20\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    left: '90%'\r\n  },\r\n  expandButton: {\r\n    position: 'absolute',\r\n    left: '90%'\r\n  },\r\n  spinnerDiv: {\r\n    textAlign: 'center',\r\n    marginTop: 50,\r\n    marginBottom: 50\r\n  }\r\n});\r\n\r\nclass ScreamDialog extends Component {\r\n  state = {\r\n    open: false,\r\n    oldPath: '',\r\n    newPath: ''\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.openDialog) {\r\n      this.handleOpen();\r\n    }\r\n  }\r\n  handleOpen = () => {\r\n    let oldPath = window.location.pathname;\r\n\r\n    const { userHandle, screamId } = this.props;\r\n    const newPath = `/users/${userHandle}/scream/${screamId}`;\r\n\r\n    if (oldPath === newPath) oldPath = `/users/${userHandle}`;\r\n\r\n    window.history.pushState(null, null, newPath);\r\n\r\n    this.setState({ open: true, oldPath, newPath });\r\n    this.props.getScream(this.props.screamId);\r\n  };\r\n  handleClose = () => {\r\n    window.history.pushState(null, null, this.state.oldPath);\r\n    this.setState({ open: false });\r\n    this.props.clearErrors();\r\n    window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      scream: {\r\n        screamId,\r\n        body,\r\n        createdAt,\r\n        likeCount,\r\n        commentCount,\r\n        userImage,\r\n        userHandle,\r\n        comments\r\n      },\r\n      UI: { loading }\r\n    } = this.props;\r\n\r\n    const dialogMarkup = loading ? (\r\n      <div className={classes.spinnerDiv}>\r\n        <CircularProgress size={200} thickness={2} />\r\n      </div>\r\n    ) : (\r\n      <Grid container spacing={16}>\r\n        <Grid item sm={5}>\r\n          <img src={userImage} alt=\"Profile\" className={classes.profileImage} />\r\n        </Grid>\r\n        <Grid item sm={7}>\r\n          <Typography\r\n            component={Link}\r\n            color=\"primary\"\r\n            variant=\"h5\"\r\n            to={`/users/${userHandle}`}\r\n          >\r\n            @{userHandle}\r\n          </Typography>\r\n          <hr className={classes.invisibleSeparator} />\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n          </Typography>\r\n          <hr className={classes.invisibleSeparator} />\r\n          <Typography variant=\"body1\">{body}</Typography>\r\n          <LikeButton screamId={screamId} />\r\n          <span>{likeCount} Likes</span>\r\n          <MyButton tip=\"Comments\">\r\n            <ChatIcon color=\"primary\" />\r\n          </MyButton>\r\n          <span>{commentCount} Comments</span>\r\n        </Grid>\r\n        <hr className={classes.visibleSeparator} />\r\n        <CommentForm screamId={screamId} />\r\n        <Comments comments={comments} oldPath={this.state.oldPath} />\r\n      </Grid>\r\n    );\r\n    return (\r\n      <Fragment>\r\n        <MyButton\r\n          onClick={this.handleOpen}\r\n          tip=\"Expand Post\"\r\n          tipClassName={classes.expandButton}\r\n        >\r\n          <UnfoldMore color=\"primary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <MyButton\r\n            tip=\"Close\"\r\n            onClick={this.handleClose}\r\n            tipClassName={classes.closeButton}\r\n          >\r\n            <CloseIcon />\r\n          </MyButton>\r\n          <DialogContent className={classes.dialogContent}>\r\n            {dialogMarkup}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nScreamDialog.propTypes = {\r\n  clearErrors: PropTypes.func.isRequired,\r\n  getScream: PropTypes.func.isRequired,\r\n  screamId: PropTypes.string.isRequired,\r\n  userHandle: PropTypes.string.isRequired,\r\n  scream: PropTypes.object.isRequired,\r\n  UI: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  scream: state.data.scream,\r\n  UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  getScream,\r\n  clearErrors\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(ScreamDialog));\r\n"]},"metadata":{},"sourceType":"module"}